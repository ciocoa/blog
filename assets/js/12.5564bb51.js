(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{409:function(e,t,_){"use strict";_.r(t);var v=_(56),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"浅拷贝和深拷贝"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝和深拷贝"}},[e._v("#")]),e._v(" 浅拷贝和深拷贝")]),e._v(" "),_("p",[e._v("浅拷贝指的是创建新的数据时这个数据有着原始数据属性值的一份精确拷贝，浅拷贝只复制指向某个对象的指针，而不复制对象本身")]),e._v(" "),_("p",[e._v("如果属性是基本类型，拷贝的就是基本类型的值，如果属性是引用类型，拷贝的就是内存地址")]),e._v(" "),_("p",[e._v("存在浅拷贝的现象，"),_("code",[e._v("Object.assign")]),e._v(" "),_("code",[e._v("Array.prototype.slice")]),e._v(" "),_("code",[e._v("Array.prototype.concat")]),e._v(" 拓展运算符实现的复制")]),e._v(" "),_("p",[e._v("深拷贝则是开辟一个新的栈，两个对象属性完全相同，但对应两个不同的地址，修改一个对象的属性时不影响另一个属性")]),e._v(" "),_("p",[e._v("存在深拷贝的现象，"),_("code",[e._v("_.cloneDeep")]),e._v(" "),_("code",[e._v("jQuery.extend")]),e._v(" "),_("code",[e._v("JSON.stringify")]),e._v(" 递归循环")])])}),[],!1,null,null,null);t.default=o.exports}}]);