(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{411:function(e,v,_){"use strict";_.r(v);var t=_(56),l=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"dom-文档对象模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档对象模型"}},[e._v("#")]),e._v(" DOM 文档对象模型")]),e._v(" "),_("p",[e._v("HTML 和 XML 文档的编程接口，它提供了对文档的结构化的表述，并定义了一种方式可以使从程序中对该结构进行访问，从而改变文档的结构，样式和内容")]),e._v(" "),_("ul",[_("li",[e._v("创建节点：\n"),_("ul",[_("li",[_("code",[e._v("creatElement")]),e._v("创建新元素。接收要创建元素的标签名")]),e._v(" "),_("li",[_("code",[e._v("creatTextNode")]),e._v("创建一个文本节点")]),e._v(" "),_("li",[_("code",[e._v("creatDocumentFragment")]),e._v("创建一个文档碎片，它表示一种轻量级的文档，主要用来存储临时节点，然后一次性添加到 DOM")]),e._v(" "),_("li",[_("code",[e._v("creatAttribute")]),e._v("创建属性节点，自定义属性")])])]),e._v(" "),_("li",[e._v("获取节点：\n"),_("ul",[_("li",[_("code",[e._v("querySelector")]),e._v("传入任何有效的 css 选择器")]),e._v(" "),_("li",[_("code",[e._v("querySelectorAll")]),e._v(" 返回所有与之相匹配的节点列表")]),e._v(" "),_("li",[_("code",[e._v("getEleentByID")]),e._v("。。。")])])]),e._v(" "),_("li",[e._v("更新节点：\n"),_("ul",[_("li",[_("code",[e._v("innerHTML")]),e._v("可以修改 DOM 节点的文本内容，还可以直接通过 HTML 片段修改 DOM 节点内部的子树")]),e._v(" "),_("li",[_("code",[e._v("innerText")]),e._v("、"),_("code",[e._v("textContent")]),e._v("自动对字符串进行编码，保证无法设置任何 HTML 标签")])])]),e._v(" "),_("li",[e._v("添加节点：\n"),_("ul",[_("li",[_("code",[e._v("appendChild")]),e._v("把一个子节点添加到父节点的最后")]),e._v(" "),_("li",[_("code",[e._v("insertBefore")]),e._v("把子节点添加到指定的位置")]),e._v(" "),_("li",[_("code",[e._v("setAttribute")]),e._v("在指定元素上添加一个属性节点，如果元素中已有则改变属性值\n"),_("code",[e._v("style")]),e._v("对应所有的 css，可以直接获取或设置")])])]),e._v(" "),_("li",[e._v("删除节点：\n"),_("ul",[_("li",[e._v("先获取该节点本身及它的父节点，然后调用父节点的"),_("code",[e._v("removeChild")]),e._v("把自己删除")])])])])])}),[],!1,null,null,null);v.default=l.exports}}]);