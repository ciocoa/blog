(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{407:function(t,a,s){"use strict";s.r(a);var r=s(56),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("p",[t._v("数组的基本操作都可以归类为增删改查、排序、转换、迭代")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#增"}},[t._v("增")]),s("ul",[s("li",[s("a",{attrs:{href:"#push"}},[t._v("push")])]),s("li",[s("a",{attrs:{href:"#unshift"}},[t._v("unshift")])]),s("li",[s("a",{attrs:{href:"#concat"}},[t._v("concat")])])])]),s("li",[s("a",{attrs:{href:"#删"}},[t._v("删")]),s("ul",[s("li",[s("a",{attrs:{href:"#pop"}},[t._v("pop")])]),s("li",[s("a",{attrs:{href:"#shift"}},[t._v("shift")])]),s("li",[s("a",{attrs:{href:"#slice"}},[t._v("slice")])])])]),s("li",[s("a",{attrs:{href:"#改"}},[t._v("改")]),s("ul",[s("li",[s("a",{attrs:{href:"#splice"}},[t._v("splice")])])])]),s("li",[s("a",{attrs:{href:"#查"}},[t._v("查")]),s("ul",[s("li",[s("a",{attrs:{href:"#indexof"}},[t._v("indexOf")])]),s("li",[s("a",{attrs:{href:"#includes"}},[t._v("includes")])]),s("li",[s("a",{attrs:{href:"#find"}},[t._v("find")])])])]),s("li",[s("a",{attrs:{href:"#排序"}},[t._v("排序")]),s("ul",[s("li",[s("a",{attrs:{href:"#reverse"}},[t._v("reverse")])]),s("li",[s("a",{attrs:{href:"#sort"}},[t._v("sort")])])])]),s("li",[s("a",{attrs:{href:"#转换"}},[t._v("转换")]),s("ul",[s("li",[s("a",{attrs:{href:"#join"}},[t._v("join")])])])]),s("li",[s("a",{attrs:{href:"#迭代"}},[t._v("迭代")]),s("ul",[s("li",[s("a",{attrs:{href:"#some"}},[t._v("some")])]),s("li",[s("a",{attrs:{href:"#every"}},[t._v("every")])]),s("li",[s("a",{attrs:{href:"#foreach"}},[t._v("forEach")])]),s("li",[s("a",{attrs:{href:"#filter"}},[t._v("filter")])]),s("li",[s("a",{attrs:{href:"#map"}},[t._v("map")])])])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"增"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增"}},[t._v("#")]),t._v(" 增")]),t._v(" "),s("h3",{attrs:{id:"push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" push")]),t._v(" "),s("p",[t._v("接收任意的参数并将它们添加到数组的末尾，返回新数组的长度")]),t._v(" "),s("h3",{attrs:{id:"unshift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unshift"}},[t._v("#")]),t._v(" unshift")]),t._v(" "),s("p",[t._v("接收任意的参数并将它们添加到数组的开头，返回新数组的长度")]),t._v(" "),s("h3",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[t._v("#")]),t._v(" concat")]),t._v(" "),s("p",[t._v("创建当前数组的副本，再把接收的参数添加到副本末尾，最后返回这个新数组（不影响原数组）")]),t._v(" "),s("h2",{attrs:{id:"删"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删"}},[t._v("#")]),t._v(" 删")]),t._v(" "),s("h3",{attrs:{id:"pop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop"}},[t._v("#")]),t._v(" pop")]),t._v(" "),s("p",[t._v("删除数组的最后一项，返回被删除的项")]),t._v(" "),s("h3",{attrs:{id:"shift"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shift"}},[t._v("#")]),t._v(" shift")]),t._v(" "),s("p",[t._v("删除数组的第一项，返回被删除的项")]),t._v(" "),s("h3",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[t._v("#")]),t._v(" slice")]),t._v(" "),s("p",[t._v("创建一个包含原有数组中一个或多个元素的新数组，不影响原始数组")]),t._v(" "),s("h2",{attrs:{id:"改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#改"}},[t._v("#")]),t._v(" 改")]),t._v(" "),s("h3",{attrs:{id:"splice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[t._v("#")]),t._v(" splice")]),t._v(" "),s("p",[t._v("接收三个参数，开始位置、要删除的数量、插入的元素，返回删除元素的数组")]),t._v(" "),s("p",[t._v("要删除的数量为 0 时，可看作是增加元素")]),t._v(" "),s("p",[t._v("不传插入的元素时，可看作删除元素")]),t._v(" "),s("h2",{attrs:{id:"查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查"}},[t._v("#")]),t._v(" 查")]),t._v(" "),s("h3",{attrs:{id:"indexof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[t._v("#")]),t._v(" indexOf")]),t._v(" "),s("p",[t._v("返回要查找的元素在数组中的位置，没找到则返回-1")]),t._v(" "),s("h3",{attrs:{id:"includes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[t._v("#")]),t._v(" includes")]),t._v(" "),s("p",[t._v("返回要查找的元素在数组中的位置，返回"),s("code",[t._v("true")]),t._v("或"),s("code",[t._v("false")])]),t._v(" "),s("h3",{attrs:{id:"find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[t._v("#")]),t._v(" find")]),t._v(" "),s("p",[t._v("返回第一个匹配的元素")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" abc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bcd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{ name: abc, age: 25 }")]),t._v("\n")])])]),s("h2",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),s("h3",{attrs:{id:"reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[t._v("#")]),t._v(" reverse")]),t._v(" "),s("p",[t._v("反转数组元素")]),t._v(" "),s("h3",{attrs:{id:"sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[t._v("#")]),t._v(" sort")]),t._v(" "),s("p",[t._v("接收一个比较函数，判断元素排序")]),t._v(" "),s("h2",{attrs:{id:"转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换"}},[t._v("#")]),t._v(" 转换")]),t._v(" "),s("h3",{attrs:{id:"join"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[t._v("#")]),t._v(" join")]),t._v(" "),s("p",[t._v("接收一个参数（字符串分隔符），返回包含所有项的字符串")]),t._v(" "),s("h2",{attrs:{id:"迭代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代"}},[t._v("#")]),t._v(" 迭代")]),t._v(" "),s("h3",{attrs:{id:"some"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some"}},[t._v("#")]),t._v(" some")]),t._v(" "),s("p",[t._v("对数组每一项运行传入的函数，有一项为"),s("code",[t._v("true")]),t._v("，则这个方法返回"),s("code",[t._v("true")])]),t._v(" "),s("h3",{attrs:{id:"every"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#every"}},[t._v("#")]),t._v(" every")]),t._v(" "),s("p",[t._v("对数组每一项运行传入的函数，所有的项为"),s("code",[t._v("true")]),t._v("，则这个方法返回"),s("code",[t._v("true")])]),t._v(" "),s("h3",{attrs:{id:"foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#foreach"}},[t._v("#")]),t._v(" forEach")]),t._v(" "),s("p",[t._v("对数组的每一项都运行传入的函数，无返回值")]),t._v(" "),s("h3",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[t._v("#")]),t._v(" filter")]),t._v(" "),s("p",[t._v("即过滤，传入一个函数，符合的项组成一个新数组返回")]),t._v(" "),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" map")]),t._v(" "),s("p",[t._v("传入一个函数，每一项调用函数的结果组成新数组返回")])])}),[],!1,null,null,null);a.default=e.exports}}]);